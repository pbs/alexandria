// Reset fonts for relevant elements
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

// iOS "clickable elements" fix for role="button"
//
// Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
// for traditionally non-focusable elements with role="button"
// see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

[role="button"] {
  cursor: pointer;
}

label {
  display: inline-block;
  max-width: 100%; // Force IE8 to wrap long content
  margin-bottom: 5px;
  font-weight: $bold;
}

// Normalize form controls
//
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
  box-sizing: border-box;
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0 0;
  line-height: normal;
}

// Make range inputs behave like textual form controls
input[type="range"] {
  display: block;
  width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Adjust output element
output {
  display: block;
  padding-top: ($padding-base-vertical + 1);
  color: $gray-primary;
  font-size: $font-size-base;
  line-height: $line-height;
}

// Search inputs in iOS
//
// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.

input[type="search"],
[type="text"] {
  padding: 10px;
  -webkit-appearance: none;
}

button,
[type="submit"],
select,
[type="checkbox"],
[type="file"],
[type="radio"],
[type="text"],
[type="search"] {
  &:focus {
    outline: $focusstate;
  }
}

// Inline forms
.form-group {
  margin-bottom: $form-group-margin-bottom;
}

.form-control {
  box-shadow: inset 0 1px 1px rgba($black, .075);
  transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
  display: block;
  width: 100%;
  height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: $padding-base-vertical $padding-base-horizontal;
  border: 1px solid $gray-primary;
  border-radius: $border-radius-base; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  background-color: $white;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  color: $gray-primary;
  font-size: $font-size-base;
  line-height: $line-height;

  // Placeholder
  @include placeholder;
  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: $input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }

  // [converter] extracted textarea& to textarea.form-control
}

// Feedback icon (requires .glyphicon classes)
.form-control-feedback {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  width: $input-height-base;
  height: $input-height-base;
  line-height: $input-height-base;
  text-align: center;
  z-index: 2; // Ensure icon is above input groups
  pointer-events: none;
}

// Form control feedback states
//
// Apply contextual and semantic states to individual form controls.

.has-feedback {
  // Enable absolute positioning
  position: relative;

  // Ensure icons don't overlap text
  .form-control {
    padding-right: ($input-height-base * 1.25);
  }
}
